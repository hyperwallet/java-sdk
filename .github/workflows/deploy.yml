name: Deploy to Maven Central

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Import GPG Key
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG || echo "No secret keys found"
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Extract GPG Key ID
        run: |
          KEY_ID=$(gpg --list-secret-keys --with-colons | awk -F: '/^sec:/ { print $5 }')
          echo "GPG_KEY_ID=$KEY_ID" >> $GITHUB_ENV
        shell: bash

      - name: Debug GPG Key Import
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG || echo "No secret keys found"
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Set Default GPG Key
        run: |
          echo "default-key ${{ env.GPG_KEY_ID }}" >> ~/.gnupg/gpg.conf
          echo "use-agent" >> ~/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          echo RELOADAGENT | gpg-connect-agent

      - name: Set GPG_TTY
        run: echo "GPG_TTY=$(tty)" >> $GITHUB_ENV

      - name: Debug GPG Key Import
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG || echo "No secret keys found"
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE

      - name: Build and Deploy
#        run: mvn -P release --batch-mode deploy -DskipTests
        run: |
          mvn clean -P release deploy -DskipTests -Psign-artifacts \
            -Dgpg.passphrase="$GPG_PASSPHRASE" \
            -Dgpg.keyname="$GPG_KEY_ID"
        env:
          GPG_TTY: $(tty)
          MAVEN_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.CENTRAL_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}